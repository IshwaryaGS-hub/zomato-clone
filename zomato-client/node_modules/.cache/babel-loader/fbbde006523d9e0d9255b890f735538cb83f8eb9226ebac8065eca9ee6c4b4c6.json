{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nivea\\\\OneDrive\\\\Desktop\\\\Zomato project\\\\zomato_client\\\\zomato_client_copy\\\\src\\\\components\\\\Filter\\\\Filter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport RestaurantFilter from \"./RestaurantFilter\";\nimport RestaurantResults from \"./RestaurantResults\";\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filter() {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mealtypeId = searchParams.get(\"mealtypeId\");\n  const cityId = searchParams.get(\"city\");\n  const [cityName, setCityName] = useState(searchParams.get(\"cityName\"));\n  const [filterObject, setFilterObject] = useState({\n    mealtypeId: mealtypeId,\n    // unchangeable\n    cityId: cityId,\n    // changeable\n    cuisines: [],\n    costForTwo: \"0\",\n    lCost: 1,\n    hCost: Infinity\n  });\n\n  // side effect which runs only one time after initial render\n  useEffect(() => {\n    axios({\n      url: \"http://localhost:4567/filterRestaurants\",\n      method: \"POST\",\n      data: filterObject,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      setRestaurants(response.data);\n    }).catch(err => console.log(err));\n  }, []);\n\n  // side effect which runs whenever \"filterObject\" state changes\n  useEffect(() => {\n    axios({\n      url: \"http://localhost:4567/filterRestaurants\",\n      method: \"POST\",\n      data: filterObject,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      setRestaurants(response.data);\n    }).catch(err => console.log(err));\n  }, [filterObject]);\n\n  // Update filterObject state with filter options selected from \"RestaurantFilter.js\" component\n  function updateFilterObject(obj) {\n    setFilterObject({\n      ...filterObject,\n      ...obj\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter d-flex gap-3\",\n    children: [/*#__PURE__*/_jsxDEV(RestaurantFilter, {\n      cityId: cityId,\n      updateFilterObject: updateFilterObject,\n      filterObject: filterObject,\n      updateCityName: newCityName => setCityName(newCityName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RestaurantResults, {\n      cityName: cityName,\n      restaurants: restaurants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(Filter, \"HrJoaEYu1OaRRd+9kqr3p1O4p+o=\", false, function () {\n  return [useSearchParams];\n});\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","useEffect","RestaurantFilter","RestaurantResults","useSearchParams","axios","jsxDEV","_jsxDEV","Filter","_s","restaurants","setRestaurants","searchParams","setSearchParams","mealtypeId","get","cityId","cityName","setCityName","filterObject","setFilterObject","cuisines","costForTwo","lCost","hCost","Infinity","url","method","data","headers","then","response","catch","err","console","log","updateFilterObject","obj","className","children","updateCityName","newCityName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/nivea/OneDrive/Desktop/Zomato project/zomato_client/zomato_client_copy/src/components/Filter/Filter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport RestaurantFilter from \"./RestaurantFilter\";\nimport RestaurantResults from \"./RestaurantResults\";\nimport { useSearchParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction Filter() {\n  const [restaurants, setRestaurants] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const mealtypeId = searchParams.get(\"mealtypeId\");\n  const cityId = searchParams.get(\"city\");\n  const [cityName, setCityName] = useState(searchParams.get(\"cityName\"));\n  const [filterObject, setFilterObject] = useState({\n    mealtypeId: mealtypeId, // unchangeable\n    cityId: cityId, // changeable\n    cuisines: [],\n    costForTwo: \"0\",\n    lCost: 1,\n    hCost: Infinity,\n  });\n\n  // side effect which runs only one time after initial render\n  useEffect(() => {\n    axios({\n      url: \"http://localhost:4567/filterRestaurants\",\n      method: \"POST\",\n      data: filterObject,\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        setRestaurants(response.data);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  // side effect which runs whenever \"filterObject\" state changes\n  useEffect(() => {\n    axios({\n      url: \"http://localhost:4567/filterRestaurants\",\n      method: \"POST\",\n      data: filterObject,\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((response) => {\n        setRestaurants(response.data);\n      })\n      .catch((err) => console.log(err));\n  }, [filterObject]);\n\n  // Update filterObject state with filter options selected from \"RestaurantFilter.js\" component\n  function updateFilterObject(obj) {\n    setFilterObject({ ...filterObject, ...obj });\n  }\n\n  return (\n    <div className=\"filter d-flex gap-3\">\n      <RestaurantFilter\n        cityId={cityId}\n        updateFilterObject={updateFilterObject}\n        filterObject={filterObject}\n        updateCityName={(newCityName) => setCityName(newCityName)}\n      />\n      <RestaurantResults cityName={cityName} restaurants={restaurants} />\n    </div>\n  );\n}\n\nexport default Filter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}